// Задание 1.
// Вычислите результат следующих выражений

(5 > 3 && 4 < 8) = true
(4 > 6 && true) = false
(3 >= 3 || false) = true
(true || false) ? 4 : 5 = 4

// Задание 2.
// Вычислите результат следующих выражений

7 / 4 = 1, если int, 1.75 если double
14 % 5 = 4

// Задание 3.
// Конвертируйте следующие двоичные числа в десятичную систему счисления

1101 = 1 + 0 + 4 + 8 = 13
101110 = 0 + 2 + 4 + 8 + 0 + 32 = 46

// Задание 4.
// Конвертируйте следующие десятичные числа в двоичную систему счисления

15 = 7 - 1
7 = 3 - 1
3 = 1 - 1
1 = 0 - 1 = 1111

53 = 26 - 1
26 = 13 - 0
13 = 6 - 1
6 = 3 - 0
3 = 1 - 1
1 = 0 - 1 = 110101

// Задание 5
// Почему вы никогда не должны делать следующее

int y = foo(++x, x) - побочный эффект. Результат может быть разным, все зависит
от того, какой параметр функции будет вычислятся первым.

int x = 7 / -2; - если одно из чисел при делении целочисленных будет отрицательным
то компилятор самостоятельно округляет число.

int x = -5 % 2 - при делении с остатком результат может быть как положительным,
так и отрицательным.

float x = 0.1 + 0.1; if (x == 0.2) return true; else return false - сравнивать 
числа с плавающей точкой не рекомендуется операторами сравнения, так как результат
сравнения практически всегда не тот, который ожидается.

int x = 3 / 0 - деление на 0 даст сбой в программе.