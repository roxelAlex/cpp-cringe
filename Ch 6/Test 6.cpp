/*
Перепишите код программы из подзаголовка "Сортировка массивов методом выбора в
C++" так, чтобы сортировка выполнялась в порядке убывания (от наибольшего
числа к наименьшему). Хотя это может показаться сложным на первый взгляд,
но на самом деле это очень просто.
*/

// На самом деле очень просто. Просто переименовать переменные для хранения
// индекса массива, чтобы был понятен контекст. И изменить условие проверки
// во вложенном цикле, чтобы он запоминал самое большое число.

#include <iostream> 
#include <algorithm> // для std::swap. В C++11 используйте заголовок <utility>
 
int main()
{
	const int length = 5;
	int array[length] = { 30, 50, 20, 10, 40 };
 
	// Перебираем каждый элемент массива (кроме последнего, он уже будет отсортирован к тому времени, когда мы до него доберемся)
	for (int startIndex = 0; startIndex < length - 1; ++startIndex)
	{
		// В переменной smallestIndex хранится индекс наименьшего значения, которое мы нашли в этой итерации.
		// Начинаем с того, что наименьший элемент в этой итерации - это первый элемент (индекс 0)
		int highestIndex = startIndex;
 
		// Затем ищем элемент поменьше в остальной части массива
		for (int currentIndex = startIndex + 1; currentIndex < length; ++currentIndex)
		{
			// Если мы нашли элемент, который меньше нашего наименьшего элемента,
			if (array[currentIndex] > array[highestIndex])
				// то запоминаем его
				highestIndex = currentIndex;
		}
 
		// smallestIndex теперь наименьший элемент. 
        // Меняем местами наше начальное наименьшее число с тем, которое мы обнаружили
		std::swap(array[startIndex], array[highestIndex]);
	}
 
	// Теперь, когда весь массив отсортирован - выводим его на экран
	for (int index = 0; index < length; ++index)
		std::cout << array[index] << ' ';
 
	return 0;
}